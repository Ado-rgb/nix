exports.default = {
   names: ['Tools'],
   tags: ['reactch'],
   command: ['reactch', 'rch'],
   start: async (m, { conn, text, prefix, command }) => {
      if (!text) {
         return m.reply(
            `‚ö†Ô∏è Debes ingresar el enlace de un mensaje del canal y la reacci√≥n.\n\n` +
            `Ejemplo:\n${prefix + command} https://whatsapp.com/channel/0029Vb5Xr5VFHWpy8grwv52/113 Hola`
         );
      }

      const [link, ...reactionTextArray] = text.split(' ');
      const reactionText = reactionTextArray.join(' ');
      if (!reactionText) return m.reply('‚ö†Ô∏è ¬°El texto para la reacci√≥n no puede estar vac√≠o!');

      const charMap = {
         a: "üÖê", b: "üÖë", c: "üÖí", d: "üÖì", e: "üÖî", f: "üÖï", g: "üÖñ", h: "üÖó", i: "üÖò",
         j: "üÖô", k: "üÖö", l: "üÖõ", m: "üÖú", n: "üÖù", o: "üÖû", p: "üÖü", q: "üÖ†", r: "üÖ°",
         s: "üÖ¢", t: "üÖ£", u: "üÖ§", v: "üÖ•", w: "üÖ¶", x: "üÖß", y: "üÖ®", z: "üÖ©",
         0: "‚ìø", 1: "‚ûä", 2: "‚ûã", 3: "‚ûå", 4: "‚ûç", 5: "‚ûé", 6: "‚ûè", 7: "‚ûê", 8: "‚ûë", 9: "‚ûí"
      };

      const emojiReaction = reactionText
         .toLowerCase()
         .split("")
         .map((k) => (k === " " ? "‚Äï" : charMap[k] || k))
         .join("");

      const parts = link.split('/');
      const channelId = parts[4];
      const messageId = parts[5];

      try {
         const channelInfo = await conn.newsletterMetadata("invite", channelId);
         await conn.newsletterReactMessage(channelInfo.id, messageId, emojiReaction);
         m.reply(`‚úÖ Reacci√≥n *${emojiReaction}* enviada al mensaje en el canal *${channelInfo.name}*.`);
      } catch (err) {
         return m.reply(
            `‚ùå No se pudo enviar la reacci√≥n.\n` +
            `Verifica que el enlace y el ID sean correctos.\n\nError: ${err.message}`
         );
      }
   },
   premium: false
};